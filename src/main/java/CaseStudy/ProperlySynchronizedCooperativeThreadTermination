// Java 8 Case Study
// Aug 17 2021
// Properly Synchronized Cooperative Thread Termination


public class StopThread {
    // Creating a flag to stop the thread
    private static boolean stopRequested;
    // Lets create a condition
    private static synchronized void requestStop() {
        stopRequested = true;
    }
    // Condition for false
    private static synchronized boolean stopRequested(){
        return stopRequested;
    }

    public static void main (String[] args) throws InterruptedExpection {
        Thread backgroundThread = new Thread(new Runnable() {
            public void run() {
                int i = 0;
                while(!stopRequested())
                i++;
            }
        });
        backgroundThread.start();
        TimeUnit.SECONDS.sleep(1);
        requestStop();

    }




    }
}